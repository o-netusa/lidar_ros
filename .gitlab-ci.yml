# workflow:
#   rules:
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
#    - if: '$CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
#      when: never
#    - if: '$CI_COMMIT_BRANCH'

variables:
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: normal

stages:
  - build
  - test

nightly_linux:
  image: onet/lidar:ros_melodic
  only:
    - schedules
  tags:
    - ros
  stage: build
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa -p 2222 192.168.10.1 >> ~/.ssh/known_hosts
  script:
    - rm -rf build devel
    - catkin_make
    - roscore &
    - roscore_pid=$!
    - catkin_make run_tests
    - kill $roscore_pid

build_linux:
  image: onet/lidar:ros_melodic
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  stage: build
  tags:
    - ros
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa -p 2222 192.168.10.1 >> ~/.ssh/known_hosts
  script:
    - rm -rf build devel
    - catkin_make
    - roscore &
    - roscore_pid=$!
    - catkin_make run_tests
    - kill $roscore_pid

